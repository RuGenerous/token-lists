{"code":"import { VersionUpgrade } from './getVersionUpgrade';\r\n/**\r\n * Returns the next version of the list given a base version and the upgrade type\r\n * @param base current version\r\n * @param bump the upgrade type\r\n */\r\nexport function nextVersion(base, bump) {\r\n    switch (bump) {\r\n        case VersionUpgrade.NONE:\r\n            return base;\r\n        case VersionUpgrade.MAJOR:\r\n            return { major: base.major + 1, minor: 0, patch: 0 };\r\n        case VersionUpgrade.MINOR:\r\n            return {\r\n                major: base.major,\r\n                minor: base.minor + 1,\r\n                patch: 0,\r\n            };\r\n        case VersionUpgrade.PATCH:\r\n            return {\r\n                major: base.major,\r\n                minor: base.minor,\r\n                patch: base.patch + 1,\r\n            };\r\n    }\r\n}\r\n//# sourceMappingURL=nextVersion.js.map","references":["/Users/professional/Documents/GitHub/token-lists/src/getVersionUpgrade.ts","/Users/professional/Documents/GitHub/token-lists/src/types.ts"],"map":"{\"version\":3,\"file\":\"nextVersion.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/nextVersion.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AAGrD;;;;GAIG;AACH,MAAM,UAAU,WAAW,CAAC,IAAa,EAAE,IAAoB;IAC7D,QAAQ,IAAI,EAAE;QACZ,KAAK,cAAc,CAAC,IAAI;YACtB,OAAO,IAAI,CAAC;QAEd,KAAK,cAAc,CAAC,KAAK;YACvB,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QAEvD,KAAK,cAAc,CAAC,KAAK;YACvB,OAAO;gBACL,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC;gBACrB,KAAK,EAAE,CAAC;aACT,CAAC;QAEJ,KAAK,cAAc,CAAC,KAAK;YACvB,OAAO;gBACL,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC;aACtB,CAAC;KACL;AACH,CAAC\"}","dts":{"name":"/Users/professional/Documents/GitHub/token-lists/nextVersion.d.ts","writeByteOrderMark":false,"text":"import { VersionUpgrade } from './getVersionUpgrade';\r\nimport { Version } from './types';\r\n/**\r\n * Returns the next version of the list given a base version and the upgrade type\r\n * @param base current version\r\n * @param bump the upgrade type\r\n */\r\nexport declare function nextVersion(base: Version, bump: VersionUpgrade): Version;\r\n"}}

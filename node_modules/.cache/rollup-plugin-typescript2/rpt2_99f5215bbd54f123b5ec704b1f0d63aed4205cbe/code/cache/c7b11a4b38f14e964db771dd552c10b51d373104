{"code":"/**\r\n * Comparator function that allows sorting version from lowest to highest\r\n * @param versionA version A to compare\r\n * @param versionB version B to compare\r\n * @returns -1 if versionA comes before versionB, 0 if versionA is equal to version B, and 1 if version A comes after version B\r\n */\r\nexport function versionComparator(versionA, versionB) {\r\n    if (versionA.major < versionB.major) {\r\n        return -1;\r\n    }\r\n    else if (versionA.major > versionB.major) {\r\n        return 1;\r\n    }\r\n    else if (versionA.minor < versionB.minor) {\r\n        return -1;\r\n    }\r\n    else if (versionA.minor > versionB.minor) {\r\n        return 1;\r\n    }\r\n    else if (versionA.patch < versionB.patch) {\r\n        return -1;\r\n    }\r\n    else if (versionA.patch > versionB.patch) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n//# sourceMappingURL=versionComparator.js.map","references":["/Users/professional/Documents/GitHub/token-lists/src/types.ts"],"map":"{\"version\":3,\"file\":\"versionComparator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/versionComparator.ts\"],\"names\":[],\"mappings\":\"AAEA;;;;;GAKG;AACH,MAAM,UAAU,iBAAiB,CAC/B,QAAiB,EACjB,QAAiB;IAEjB,IAAI,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;QACnC,OAAO,CAAC,CAAC,CAAC;KACX;SAAM,IAAI,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;QAC1C,OAAO,CAAC,CAAC;KACV;SAAM,IAAI,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;QAC1C,OAAO,CAAC,CAAC,CAAC;KACX;SAAM,IAAI,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;QAC1C,OAAO,CAAC,CAAC;KACV;SAAM,IAAI,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;QAC1C,OAAO,CAAC,CAAC,CAAC;KACX;SAAM,IAAI,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;QAC1C,OAAO,CAAC,CAAC;KACV;SAAM;QACL,OAAO,CAAC,CAAC;KACV;AACH,CAAC\"}","dts":{"name":"/Users/professional/Documents/GitHub/token-lists/versionComparator.d.ts","writeByteOrderMark":false,"text":"import { Version } from './types';\r\n/**\r\n * Comparator function that allows sorting version from lowest to highest\r\n * @param versionA version A to compare\r\n * @param versionB version B to compare\r\n * @returns -1 if versionA comes before versionB, 0 if versionA is equal to version B, and 1 if version A comes after version B\r\n */\r\nexport declare function versionComparator(versionA: Version, versionB: Version): -1 | 0 | 1;\r\n"}}
